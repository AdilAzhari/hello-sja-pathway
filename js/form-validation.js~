class FormValidator {
    constructor(formId) {
        this.form = document.getElementById(formId);
        if (!this.form) return;

        this.fields = this.form.querySelectorAll('[required]');
        this.init();
    }

    init() {
        this.form.addEventListener('submit', this.handleSubmit.bind(this));

        this.fields.forEach(field => {
            field.addEventListener('input', this.validateField.bind(this, field));
            field.addEventListener('blur', this.validateField.bind(this, field));
        });
    }

    handleSubmit(e) {
        let isValid = true;

        this.fields.forEach(field => {
            if (!this.validateField(field)) {
                isValid = false;
            }
        });

        if (!isValid) {
            e.preventDefault();
            this.form.querySelector('.error').focus();
        }
    }

    validateField(field) {
        const formGroup = field.closest('.form-group');
        const errorElement = formGroup.querySelector('.error-message');

        if (!field.value.trim()) {
            this.showError(formGroup, errorElement, 'This field is required');
            return false;
        }

        if (field.type === 'email' && !this.isValidEmail(field.value)) {
            this.showError(formGroup, errorElement, 'Please enter a valid email');
            return false;
        }

        this.hideError(formGroup, errorElement);
        return true;
    }

    isValidEmail(email) {
        return /^[^\s@]+@[^\s@]+\.[^\s@]+$/.test(email);
    }

    showError(formGroup, errorElement, message) {
        formGroup.classList.add('has-error');
        if (errorElement) {
            errorElement.textContent = message;
            errorElement.style.display = 'block';
        }
    }

    hideError(formGroup, errorElement) {
        formGroup.classList.remove('has-error');
        if (errorElement) {
            errorElement.style.display = 'none';
        }
    }
}

// Initialize all forms
document.addEventListener('DOMContentLoaded', () => {
    new FormValidator('contactForm');
    // Add other forms as needed
});